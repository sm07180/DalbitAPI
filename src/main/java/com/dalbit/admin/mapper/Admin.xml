<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.admin.dao.AdminDao" >

    <select id="selectMobileAdminMenuAuth" parameterType="com.dalbit.admin.vo.SearchVo" resultType="com.dalbit.admin.vo.AdminMenuVo">
        select menu.idx
            , menu.menu_name
            , menu.menu_url
            , menu.depth
            , menu.order_no
            , menu.parent_idx
            , auth.is_read
            , auth.is_insert
            , auth.is_delete
        from rd_admin.tb_admin_test_account test
            , rd_admin.tb_admin_menu_auth auth
            , rd_admin.tb_admin_menu menu
        where test.emp_no = auth.emp_no
            and auth.menu_idx = menu.idx
            and mem_no = '11584609037349'
            and menu.is_use = 1
            and menu.mobile_yn = 'Y'
    </select>

    <select id="selectBroadcastList" parameterType="com.dalbit.admin.vo.SearchVo" resultType="com.dalbit.admin.vo.BroadcastVo">
        /* Admin.xml - selectBroadcastList */
        select *
        from(
            select
                room.room_no
                , room.mem_no
                , room.start_date
                , basic.mem_nick
                , basic.mem_id
                , (select `code` from rd_data.tbl_code_define where type = 'subject_type' and value = room.subject_type) subject_name
                , room.title
                , (select count(*) from rd_data.tb_broadcast_room_member where room_no = room.room_no and state = 0) liveListener
                , (select count(*) from rd_data.tb_member_report where status = 0 and reported_mem_no = room.mem_no) reportedCnt
            from rd_data.tb_broadcast_room room
                , rd_data.tb_member_basic basic
            where room.mem_no = basic.mem_no
                and room.state <![CDATA[<>]]> 4
        ) list
        <if test='reportYn == "Y"'>
        where 0 <![CDATA[<]]> reportedCnt
        </if>
    </select>

    <select id="callBroadcastRoomExit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_data.sp_broadcast_room_exit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <update id="updateBroadcastMemberExit" parameterType="com.dalbit.admin.vo.procedure.P_RoomForceExitInputVo">
        /* Admin.xml - updateBroadcastMemberExit */
        update rd_data.tb_broadcast_room_member
		   set state = 1,
			   last_upd_date = now()
        where  room_no = #{room_no} and state = 0
    </update>

    <update id="updateBroadcastExit" parameterType="com.dalbit.admin.vo.BroadcastExitVo">
        /* Admin.xml - updateBroadcastExit */
        update rd_data.tb_broadcast_room
           set state= 4,
               end_date = now(),
               airtime = TIMESTAMPDIFF( second, #{start_date}, NOW()),
               last_upd_date = now()
         where room_no = #{room_no}
    </update>

    <select id="selectProfileList">
        select basic.mem_no
            , session.last_upd_date
            , session.mem_no
            , profile.image_profile
            , (select count(*) from rd_data.tb_member_report where status = 0 and reported_mem_no = basic.mem_no) reportedCnt
        from rd_data.tb_member_basic basic
            inner join rd_data.tb_member_profile profile on basic.mem_no = profile.mem_no
            inner join (select mem_no, max(last_upd_date) last_upd_date
                        from rd_data.tb_member_session
                        group by mem_no
                        order by max(last_upd_date) desc) session on basic.mem_no = session.mem_no
        where session.mem_no is not null
    </select>
</mapper>