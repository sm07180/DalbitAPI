<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.event.dao.EventDao" >

    <select id="callEventRankingLive" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RankingLiveOutputVo">
      call sp_event_ranking_live_old(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventRankingResult" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RankingResultOutputVo">
      call sp_event_ranking_result(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventReplyList" statementType="CALLABLE" parameterType="com.dalbit.event.vo.procedure.P_ReplyListInputVo" resultType="com.dalbit.event.vo.procedure.P_ReplyListOutputVo">
        CALL sp_event_reply_list(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="callEventReplyAdd" statementType="CALLABLE" parameterType="com.dalbit.event.vo.procedure.P_ReplyAddInputVo" resultType="int">
        CALL sp_event_reply_add(#{event_idx, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{depth, mode=IN, jdbcType=INTEGER}, #{contents, mode=IN, jdbcType=VARCHAR}, #{op_name, mode=IN, jdbcType=VARCHAR})
    </select>

    <select id="callEventReplyDelete" statementType="CALLABLE" parameterType="com.dalbit.event.vo.procedure.P_ReplyDeleteInputVo" resultType="int">
        CALL sp_event_reply_delete(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{reply_idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="callEventAuthCheck" statementType="CALLABLE" parameterType="com.dalbit.event.vo.procedure.P_ReplyDeleteInputVo" resultType="integer">
        CALL sp_event_auth_check(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{reply_idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="callAttendanceCheckLoad" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_load(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callAttendanceCheckGift" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_gift(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callAttendanceCheckBonus" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_bonus(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callRisingLive" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RisingEventListOutputVo">
      call sp_event_rising_live(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callRisingResult" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RisingEventListOutputVo">
      call sp_event_rising_result(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callAttendanceCheck" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
      call sp_member_attendance_check(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callPhoneInput" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
      call sp_gifticon_phone_input(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callGifticonWinList" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_GifticonWinListOutputVo">
      call sp_gifticon_win_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="selectLunarDate" statementType="CALLABLE" resultType="com.dalbit.event.vo.LunarVo">
        CALL sp_event_attend_lunar_select()
    </select>

    <select id="selectPhotoList" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="com.dalbit.event.vo.PhotoEventOutputVo">
        CALL sp_event_photo_list(#{slct_type, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}
                                , #{page, mode=IN, jdbcType=INTEGER}, #{records, mode=IN, jdbcType=INTEGER}, #{totalCnt, mode=OUT, jdbcType=INTEGER})
    </select>

    <select id="insertEventMember" statementType="CALLABLE" parameterType="com.dalbit.event.vo.EventMemberVo" resultType="INTEGER">
        CALL sp_event_member_add(#{event_idx, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{platform, mode=IN, jdbcType=INTEGER}, #{event_member_idx, mode=OUT, jdbcType=INTEGER})
    </select>

    <select id="callEventApply" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call rd_data.sp_event_apply(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="deleteEventMemberPhoto" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="int">
        CALL sp_event_member_photo_delete(#{idx, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{del_yn, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="insertPhoto" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="INTEGER">
        CALL sp_event_photo_add(
            #{event_idx, mode=IN, jdbcType=INTEGER}
            , #{event_member_idx, mode=IN, jdbcType=INTEGER}
            , #{mem_no, mode=IN, jdbcType=VARCHAR}
            , #{mem_name, mode=IN, jdbcType=VARCHAR}
            , #{mem_phone, mode=IN, jdbcType=VARCHAR}
            , #{image_url, mode=IN, jdbcType=VARCHAR}
            , #{image_url2, mode=IN, jdbcType=VARCHAR}
            , #{image_url3, mode=IN, jdbcType=VARCHAR}
            , #{title, mode=IN, jdbcType=VARCHAR}
            , #{contents, mode=IN, jdbcType=VARCHAR}
            , #{slct_device, mode=IN, jdbcType=INTEGER}
            , #{device1, mode=IN, jdbcType=VARCHAR}
            , #{device2, mode=IN, jdbcType=VARCHAR}
        )
    </select>

    <select id="updatePhoto" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="int">
        CALL sp_event_photo_update(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{idx, mode=IN, jdbcType=INTEGER}
                                , #{image_url, mode=IN, jdbcType=VARCHAR}, NULL, NULL
                                , NULL, #{contents, mode=IN, jdbcType=VARCHAR}, NULL
                                , NULL, NULL)
    </select>

    <select id="deletePhoto" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="int">
        CALL sp_event_photo_delete(#{idx, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{del_yn, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="selectPhotoPcAirTime" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="int">
        CALL sp_event_pc_live_time(#{event_idx, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="selectEventBasic" statementType="CALLABLE" parameterType="int" resultType="com.dalbit.event.vo.EventBasicVo">
        CALL sp_event_basic_view(#{idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="selectKnowhowList" statementType="CALLABLE" parameterType="com.dalbit.event.vo.KnowhowEventInputVo" resultType="com.dalbit.event.vo.KnowhowEventOutputVo">
        CALL sp_event_photo_all_list(#{slct_type, mode=IN, jdbcType=INTEGER}, #{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{page, mode=IN, jdbcType=INTEGER}, #{records, mode=IN, jdbcType=INTEGER}, #{slct_order, mode=IN, jdbcType=INTEGER}, #{slct_platform, mode=IN, jdbcType=INTEGER}, #{totalCnt, mode=OUT, jdbcType=INTEGER})
    </select>

    <select id="selectKnowhowDetail" statementType="CALLABLE" parameterType="com.dalbit.event.vo.KnowhowEventInputVo" resultType="com.dalbit.event.vo.KnowhowEventOutputVo">
        CALL sp_event_photo_view(#{event_idx, mode=IN, jdbcType=INTEGER}, #{idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="updatePhotoViewCnt" statementType="CALLABLE" parameterType="int" resultType="int">
        CALL sp_event_photo_read_update(#{idx, mode=IN, jdbcType=INTEGER})
    </select>

    <select id="insertKnowhow" statementType="CALLABLE" parameterType="com.dalbit.event.vo.PhotoEventInputVo" resultType="int">
        CALL sp_event_photo_add(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{event_member_idx, mode=IN, jdbcType=INTEGER}
                                , #{image_url, mode=IN, jdbcType=VARCHAR}, #{image_url2, mode=IN, jdbcType=VARCHAR}, #{image_url3, mode=IN, jdbcType=VARCHAR}
                                , #{title, mode=IN, jdbcType=VARCHAR}, #{contents, mode=IN, jdbcType=VARCHAR}, #{slct_device, mode=IN, jdbcType=INTEGER}
                                , #{device1, mode=IN, jdbcType=VARCHAR}, #{device2, mode=IN, jdbcType=VARCHAR})
    </select>

    <select id="updateKnowhow" statementType="CALLABLE" parameterType="com.dalbit.event.vo.KnowhowEventInputVo" resultType="int">
        CALL sp_event_photo_update(#{mem_no, mode=IN, jdbcType=INTEGER}, #{event_idx, mode=IN, jdbcType=INTEGER}, #{idx, mode=IN, jdbcType=INTEGER}
                                , #{image_url, mode=IN, jdbcType=VARCHAR}, #{image_url2, mode=IN, jdbcType=VARCHAR}, #{image_url3, mode=IN, jdbcType=VARCHAR}
                                , #{title, mode=IN, jdbcType=VARCHAR}, #{contents, mode=IN, jdbcType=VARCHAR}, #{slct_device, mode=IN, jdbcType=INTEGER}
                                , #{device1, mode=IN, jdbcType=VARCHAR}, #{device2, mode=IN, jdbcType=VARCHAR})
    </select>

    <select id="callEventGood" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_good(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventApplyCheck" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_apply_check(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventApplyCheck004" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_apply_check_004(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventApplySP" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_apply(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventApply003" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_apply_003(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventDetail003" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_detail_003(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventApply004" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_apply_004(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageList" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_EventPageListOutputVo">
        call sp_event_page(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageWinList" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_EventPageWinListOutputVo">
        call sp_event_page_win_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageWinResult" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_EventPageWinResultOutputVo">
        call sp_event_page_win_result(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPagePrizeReceiveWay" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_page_prize_receive_way(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageWinnerAddInfoSelect" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_page_winner_add_info_select(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageWinnerAddInfoEdit" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_event_page_winner_add_info_edit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventPageWinnerInfoFormat" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_EventPageWinnerInfoFormatVo">
        call sp_event_page_winner_info_format(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="selectTimeEventInfo" parameterType="com.dalbit.event.vo.TimeEventVo" resultType="com.dalbit.event.vo.TimeEventVo">
        CALL sp_event_time_info()
    </select>

    <select id="callOpenEvent" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_OpenEventVo">
        call sp_event_ranking_live(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
</mapper>