<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.event.dao.EventDao" >

    <select id="callEventRankingLive" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RankingLiveOutputVo">
      call sp_event_ranking_live(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventRankingResult" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_RankingResultOutputVo">
      call sp_event_ranking_result	(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callEventReplyList" parameterType="com.dalbit.event.vo.procedure.P_ReplyListInputVo" resultType="com.dalbit.event.vo.procedure.P_ReplyListOutputVo">
      SELECT
            a.idx AS reply_idx
            ,a.event_idx AS event_idx
            ,a.mem_no AS write_mem_no
            ,a.depth AS depth
            ,a.contents AS contents
            ,a.status AS status
            ,a.reg_date AS writeDate
            ,a.op_name AS op_name
            ,a.last_upd_date AS updateDate
            ,mb.mem_userId AS userId
            ,mb.mem_nick AS nickName
            ,mb.mem_sex AS memSex
            ,#{mem_no} AS req_mem_no
            ,(SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.mem_no) AS profileImage
        FROM
            rd_admin.tb_event_reply AS a
        LEFT JOIN
            rd_data.tb_member_basic AS mb
        ON
            a.mem_no = mb.mem_no
        WHERE
            a.event_idx = ${event_idx}
            AND a.depth = 1
            AND a.status = 1
        ORDER BY
            a.idx desc
    </select>

    <insert id="callEventReplyAdd" parameterType="com.dalbit.event.vo.procedure.P_ReplyAddInputVo">
        INSERT INTO rd_admin.tb_event_reply
        (
            event_idx
            ,mem_no
            ,depth
            ,contents
            ,status
            ,reg_date
            ,op_name
        )
        VALUES
        (
             #{event_idx}
             ,#{mem_no}
             ,#{depth}
             ,#{contents}
             ,1
             ,NOW()
             ,#{op_name}
        )
    </insert>

    <update id="callEventReplyDelete" parameterType="com.dalbit.event.vo.procedure.P_ReplyDeleteInputVo">
        UPDATE rd_admin.tb_event_reply
        SET
          status = 2
          ,op_name = #{mem_no}
          ,last_upd_date = NOW()
        WHERE
          idx = #{reply_idx}
          AND event_idx = #{event_idx}
    </update>

    <select id="callEventAuthCheck" parameterType="com.dalbit.event.vo.procedure.P_ReplyDeleteInputVo" resultType="integer">
        SELECT
          count(*)
        FROM
        (
             SELECT
                mem_no
             FROM
                rd_admin.tb_event_reply AS er
             WHERE
                er.event_idx = #{event_idx} AND er.idx = #{reply_idx} AND er.mem_no = #{mem_no}
             UNION ALL
             SELECT
                mem_no
             FROM
                rd_data.tb_member_basic AS mb
             WHERE
                mb.mem_no = #{mem_no} AND mb.inner = 1
          ) AS a
    </select>

    <select id="callAttendanceCheckLoad" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_load(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callAttendanceCheckGift" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_gift(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callAttendanceCheckBonus" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.event.vo.procedure.P_AttendanceCheckLoadOutputVo">
        call sp_member_attendance_check_bonus(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

</mapper>