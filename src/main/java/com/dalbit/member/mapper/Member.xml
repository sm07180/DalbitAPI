<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.member.dao.MemberDao" >

    <select id="callNickNameCheck" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
      call sp_checkDuplicateNickName(#{nickName, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberLogin" statementType="CALLABLE" parameterType="ProcedureVo" resultType="com.dalbit.member.vo.ConnectRoomVo">
        call sp_member_login(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberJoin" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_join(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callChangePassword" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_changePassword(#{phoneNo, mode=IN, jdbcType=VARCHAR}, #{password, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberInfoView" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_info_view(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberSessionUpdate" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_session_update(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberWithdrawal" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_withdrawal(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="selectMemState" parameterType="String" resultType="com.dalbit.member.vo.TokenCheckVo">
        select
          idx
          , mem_no
          , mem_id
          , mem_passwd
          , mem_phone
          , mem_nick
          , mem_userid
          , mem_name
          , mem_email
          , foreign_yn
          , mem_sex
          , mem_birth_year
          , mem_birth_month
          , mem_birth_day
          , mem_slct
          , mem_adid
          , mem_state
          , block_day
          , block_end_date
          , mem_join_date
          , os_type
          , location
          , ip
          , last_upd_date
        from tb_member_basic
        where mem_no = #{value}
    </select>

    <select id="selectAdminBlock" parameterType="com.dalbit.common.vo.DeviceVo" resultType="int">
        select count(block_end_date)
        from rd_admin.tb_login_block
        where
            (
                ( block_type = 1 and block_text = #{deviceUuid} )
                or ( block_type = 2 and block_text = #{ip} )
            )
            and block_text != ''
            and now() <![CDATA[<]]> block_end_date
    </select>

    <select id="selectAnonymousMem" parameterType="String" resultType="com.dalbit.member.vo.TokenCheckVo">
        select
          idx
        from tb_member_basic_a
        where mem_no = #{value}
    </select>


    <select id="callExchangeCalc" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_exchange_calc(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callExchangeApply" statementType="CALLABLE" parameterType="ProcedureVo" resultType="ProcedureVo">
        call sp_member_exchange_apply(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <select id="exchangeApprovalSelect" parameterType="string" resultType="ExchangeSuccessVo">
        select
            idx as exchangeIdx
            , account_name as accountName
            , account_no as accountNo
            , bank_code as bankCode
            , social_no as socialNo
            , phone_no as phoneNo
            , address_1 as address1
            , address_2 as address2
        from tb_member_exchange
        where mem_no = #{memNo}
          and state = 1
        order by reg_date desc
        limit 1
    </select>


    <select id="exchangeReApprovalSelect" parameterType="ExchangeReApplyVo" resultType="ExchangeSuccessVo">
        select
            mem_no as memNo
            , account_name as accountName
            , account_no as accountNo
            , bank_code as bankCode
            , social_no as socialNo
            , phone_no as phoneNo
            , address_1 as address1
            , address_2 as address2
            , add_file1 as addFile1
            , add_file2 as addFile2
            , terms_agree as termsAgree
        from tb_member_exchange
        where idx = #{exchangeIdx}
    </select>

    <select id="selectListeningRoom" parameterType="String" resultType="String">
        SELECT
          room_no
        FROM tb_broadcast_room_member
        WHERE mem_no = #{value}
          AND state = 0
          AND auth &lt; 3
    </select>
</mapper>